name: ETL Pipeline Simple

on:
  schedule:
    # Ejecución diaria al mediodía Colombia (UTC-5)
    - cron: '0 17 * * *'  # 5:00 PM UTC = 12:00 PM COT (mediodía)
  workflow_dispatch:  # Permite ejecución manual
  push:
    branches: [ main ]
    paths: ['flows/**', 'data/**']

jobs:
  etl-simple:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Permite hacer push al repositorio
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 Install dependencies
      run: |
        pip install -r requirements.txt
    
    - name: 📥 Check for existing database and logs
      run: |
        if [ -f data/etl.db ]; then
          echo "✅ Base de datos encontrada en el repositorio"
        else
          echo "ℹ️ No hay base de datos previa, se creará una nueva"
        fi
        if [ -f data/etl.log ]; then
          echo "✅ Log anterior encontrado en el repositorio"
          echo "📊 Tamaño del log: $(wc -l < data/etl.log) líneas"
        else
          echo "ℹ️ No hay log previo, se creará uno nuevo"
        fi
    
    - name: 🔍 Check database status
      run: |
        echo "📊 Estado de la base de datos:"
        if [ -f data/etl.db ]; then
          echo "✅ Archivo etl.db encontrado"
          sqlite3 data/etl.db "SELECT COUNT(*) as total_runs FROM etl_monitor;" 2>/dev/null || echo "📝 Tabla etl_monitor será creada"
        else
          echo "📝 Se creará nueva base de datos etl.db"
        fi
    
    - name: 🚀 Execute ETL Pipeline
      run: |
        echo "🚀 Iniciando ETL Pipeline..."
        cd flows
        python etl_simple.py
        echo "✅ Pipeline completado"
    
    - name: 📊 Show results
      run: |
        echo "📊 Resultados del ETL:"
        ls -la data/
        if [ -f data/etl.log ]; then
          echo "📝 Últimas líneas del log:"
          tail -20 data/etl.log
        fi
        if [ -f data/etl.db ]; then
          echo "📈 Registros en etl_monitor:"
          sqlite3 data/etl.db "SELECT COUNT(*) as total_runs, MAX(run_ts) as last_run FROM etl_monitor;" || echo "Error consultando etl_monitor"
        fi
    
    - name: 💾 Commit updated database and logs
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/etl.db data/etl.log
        if git diff --staged --quiet; then
          echo "📝 No hay cambios en la base de datos o logs para commitear"
        else
          git commit -m "update: Actualizar etl.db y etl.log con ejecución $(date -u +%Y-%m-%d_%H:%M:%S)"
          git push
          echo "✅ Base de datos y logs actualizados y pusheados al repositorio"
        fi
    
    - name: 💾 Upload database (persistent)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: etl-database
        path: data/etl.db
        if-no-files-found: ignore
        retention-days: 30           # Más tiempo para la DB persistente
        compression-level: 6
    
    - name: 📁 Upload execution results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: etl-results-${{ github.run_number }}
        path: |
          data/etl.log
          data/df_final.csv
          data/raw_*.csv
          data/raw_*.json
          
        if-no-files-found: ignore
        retention-days: 7
        compression-level: 0  


